#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast
set -e

# Debug
# set -x

# Parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`

# Load formating tools
source $BUILDPACK_DIR/bin/common.sh

# Setup apt environment
APT_DIR="$BUILD_DIR/.apt"
APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_REPO_FILE="$BUILDPACK_DIR/etc/datadog.list"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

# Create build and run environment
mkdir -p $APT_CACHE_DIR/archives/partial
mkdir -p $APT_STATE_DIR/lists/partial
mkdir -p $APT_DIR

# Install dependencies
topic "Updating apt caches for dependencies"
apt-get $APT_OPTIONS update | indent

topic "Installing dependencies"
DEPS="libpci-dev libpci3 libsensors4 libsensors4-dev libsnmp-base libsnmp30"
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall --no-install-recommends $DEPS | indent
IFS=" " read -a DEP_PKGS <<< $DEPS
for DEP in ${DEP_PKGS[@]}; do
  echo "Installing $DEP" | indent
  dpkg -x $APT_CACHE_DIR/archives/$DEP\_*.deb $APT_DIR
done

# Install Datadog Agent
topic "Updating apt caches for Datadog Agent"
APT_OPTIONS="$APT_OPTIONS -o Dir::Etc::SourceList=$APT_REPO_FILE"
apt-get $APT_OPTIONS update | indent

topic "Installing Datadog Agent"
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall --no-install-recommends datadog-agent | indent

# Use specific version if specified.
if [ -n "$DD_AGENT_VERSION" ]; then
  DEB=$(ls -t $APT_CACHE_DIR/archives/datadog-agent_1%3a$DD_AGENT_VERSION-*.deb | head -n 1)
else
  DEB=$(ls -t $APT_CACHE_DIR/archives/datadog-agent*.deb | head -n 1)
fi
dpkg -x $DEB $APT_DIR

# Rewrite package-config files
find $APT_DIR -type f -ipath '*/pkgconfig/*.pc' | xargs --no-run-if-empty -n 1 sed -i -e 's!^prefix=\(.*\)$!prefix='"$APT_DIR"'\1!g'

# Install the runner
topic "Installing Datadog runner"
mkdir -p $BUILD_DIR/.profile.d
cp $BUILDPACK_DIR/extra/datadog.sh $BUILD_DIR/.profile.d/
chmod +x $BUILD_DIR/.profile.d/datadog.sh
